import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import jwt from 'jsonwebtoken'

const SECRET_KEY = "secret_key"

export default function Home() {
  const [name, setName] = useState('')
  const [getName, setGetName] = useState('')
  const [token, setToken] = useState('')

  //localstoragからトークンを取得する

  useEffect(() => {
    const gettoken = localStorage.getItem("token")
    if (gettoken) {
      setToken(gettoken)
    }

  }, [token])

  const nameHandler = (e) => {
    setName(e.target.value)
  }

  const clickHandler = () => {
    //jsonwebtokenトークンを発行する
    console.log("click:", token)
    if (!token) {
      const gettoken = jwt.sign({ name: name }, SECRET_KEY, { expiresIn: '2m' })
      localStorage.setItem("token", gettoken)
      setToken(gettoken)
    }
  }

  const submitHanbdler = async (e) => {
    e.preventDefault()
    //トークンを検証する
    console.log("submit")

    try {
      const response = await fetch("/api/token", {
        method: "POST",
        headers: {
          "Accept": "application/json",
          "Content-Type": "application/json",
           "authorization": `Bearer ${localStorage.getItem("token")}`
        },
        body: JSON.stringify({
          name: name
        })
      })

      const jsonData = await response.json()
      alert(jsonData.message)
      if (jsonData.name) {
        localStorage.removeItem("token")
        setToken("")
      } else {
        setGetName(jsonData.name)
      }

    } catch (error) {
      alert("送信失失敗")
    }

  }
  return (
    <>
      <Head>
        <title>middlewareテスト</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>middlewareテスト</h1>

        <div className={styles.box}>
          <p>middlewareを検証するにあたって以下の内容でテスト</p>
          <p>JsonWebTokenでトークンを発行して、トークンをmiddlewareでトークンが有効かどうかを検証するテスト。<br />トークンの有効期限は2分としている。</p>
          <p>「トークンを発行する」ボタンをクリックするとトークンが発行されて「トークンを発行済みです」と表示される。</p>

          <p>フォームにに名前を入力して「送信」ボタンをクリックすると、以下の処理が行われる。成功したらフォームにに入力した名前がレスポンスで返ってきて、名前が表示される。</p>

          <ul className={styles.list}>
            <li>トークンが発行されていない場合はmiddlewareの処理で「トークンがありません」とメッセージを返す</li>
            <li>トークンが発行されていてもトークンを検証して有効ではない場合はmiddlewareの処理で「トークンの期限が切れている」とメッセージを返す</li>
            <li>middlewareの処理でトークンが有効とされたら、フォームの値が返される。</li>
          </ul>
        </div>
        {(!token) ?
          (<>
            <p>トークンを発行してください</p> <button className={styles.btn} onClick={clickHandler}>トークンを発行する</button>
          </>) :
          <p>トークンを発行済みです。</p>
        }
        {getName &&
          <>
            <hr />
            <p>こんにちは、{getName}さん</p>
            <hr />
          </>
        }
        <form className={styles.forms} onSubmit={submitHanbdler}>
          名前: <input onChange={(e) => nameHandler(e)} value={name} type="text" name="name" /><br />
          <button type="submit">送信</button>
        </form>
      </main>
    </>
  )
}
